<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAMCAgMCAgMDAwMEAwMEBQgFBQQEBQoHBwYIDAoMDAsKCwsN
        DhIQDQ4RDgsLEBYQERMUFRUVDA8XGBYUGBIUFRT/2wBDAQMEBAUEBQkFBQkUDQsNFBQUFBQUFBQUFBQU
        FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBT/wAARCAAyAUYDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD5Pooor8qPwoKKKKACiiigAooooAKKKKACiivvv9nb9gP4ffFz
        4M+GvFusax4mttS1OF5JorG6t0hUiR1G0NAxHCjqTXbhsHVxfN7Lp+p14TC1MbV9jS+KzfyVv8z4Eor2
        r9rb4BW/7PPxUOg6bPeXeh3VpHd2NxfMrSspyrqzKqqSHVugHBFeb/DnwXdfEXx5oHhmyDfaNVvYrUMo
        zsDMAzfRRk/hXPClOpVVGK96/L872/MjEYephasqNRe8jnaK/T6b/gl/8LYreR/7f8XllUn/AI/LXGQP
        +vavzHvIVt7yeJSSscjKM9cA4rXE4WphZKNTdnbjMsxGBhGdZKz8yGiiiuU8oKK+/f2G/wBl34Y/GH4M
        za74v8M/2vqq6pNbC4+33UH7tVjIXbHKq9WPOM818S/EnSbTQPiJ4p0uwi8ixstVura3i3FtkaTMqrkk
        k4AAyTmuzE4SeFVNza99XVu1k9fvR3TwdSnhoYptcsm0u+l/8jnKKKK4zhCiit3wHpttrXjjw7p95H51
        pd6jbwTR7iu5GlVWGQQRkE8jmtKcHVnGmt27feJuyuYVFfoN+21+yv8AC74RfBGXX/CXhj+ydXXULeAX
        H9oXU3yMW3DbJKy84Haov2c7b9mqT9mqH/hMH8LDxC0E/wDah1R4xqYk3NjyA37z7u3b5f8APNd31GXP
        Vpymk6a+/S+h9BLJ6tPFxwlWcU5R5r303tbZa/ofn9RT5/L86TySxi3HZv67c8Z98UyvMPBkuVtBRRRT
        EFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAV+wX7ImpNo/7H/hW/RVd
        rXTbmcK3Q7ZZWwfyr8fa/YL9kOEXP7H/AIVhOMSabdJyMjmWUV9JlMpQo4iUN0lb11PpuGlzZmk/5Zfn
        A8q/4KMeC7X4i/A7w38RNI23C6W8cvnIM7rO5C4P4P5R/E14x/wTN+GY8S/FrVPFtzFutfDtpthZhx9o
        myoI+iCT/voV71+xzrVr+0D+yLq/gLVZfMuNPhn0SXcQWWJ1LQOP93OB/wBc60fgP4db9kn9j/XNf1mB
        YNc2XOp3MTHGZz+6t48++2P8WNd3sqdHGzx//Lvk516tWt6219T2Vh1meIwuO6NXn5OH/B09EfR/h3xV
        beLtM1i5s3WS2tby5sFde7Qny3/8fVx+FfkT+zn+zxe/tG/Fa80SO7bTdIsy91qN8qbmjj34CoOm9icD
        PAwTzjB/Rb9iG4nvv2WfD17dStPc3b39xLI3Vna6mLE+5OT+NfAX7LPwv+InxU+I2t6b4G8Wal4Ksoz5
        mratYXc0IWPewjUrG6mRid21SQOGORUYym54zDwqQ53y6paXdlf5X19Cs0qLGYfDVHFtTley3s+n3aXP
        rnU/2aP2U/hvremeEfEzW58R3SoIl1LWrpJ5NxwrP5TrGm49MhQe1eF/tpfsVaV8FvD8fjTwZNcnw/56
        wXunXT+YbQucI6OeShOFw2SCRyc8ej/Er9l34FeFdfWX4nfGnxLdeLWjjeaS91WGW6cAAIShhkkAwBjJ
        PA46V7h+3GkTfsm+Ldh82MRWhRn5J/0iLB+tZ4rDwqYSpUcIxlB6cvbs7dehv9SpV4VqU6MIWjeNrcyd
        nvbzOR/4Jn/8m73P/Ybuf/QIq+KvC/wN1H9oL9qbxZ4XsrkWFuNY1C5vb5k3/Z4FuGDMFyMsSVUDPVvS
        vtX/AIJn/wDJu9z/ANhu5/8AQIq+Qfhz8PfiB8S/2ovHOj+AfEV/4UmbVb59R1ayu5bcQWwumzuMbAvl
        sYTPJ9ACRpjKaqVcFFw5vc2XX3Yfh38jw5xUsqwsWm7zei3fvS0XqfU2tfsw/sr/AAdm0vQPGk8R1m8U
        GKTV9YuY5pQTgOwhdERSQRkqBweeK8l/bI/Yc0L4Y+C5vHfgGS5j0q1ZPt+lXEpnEcbEKJYnPzYBIyGJ
        4Oc8Yrtfih+yr8GfDd5azfF742+Jr7xK1sv77UNUiad4wTjbG8UsgTO7A3Eda97/AGjIbFf2P/FSafcP
        f6cvh1RbXM3LyxhE2O3A5Iweg5PQVli6MJYPEVZQjGVNNrl8k3Z29LffbY9yODpVnUoVKEYLl0s1zp+d
        v673ufCv7Ff7Ilv+0BdX/iDxLNcW3hLTZRB5Vs2yS9nwGKBv4UUEZI5O4AEdR9TX/wCy1+zbD4xsdA0P
        UdP8O+ObK7ingtoNeea582Ng4RoJZWznHKgBsdMV0n/BP63hs/2VdAlt1XzZZ72WTHOX89xz+CqPwr8z
        PC+q3erfHTSNRu5nkvrjxHDPLKSdxdrkEn8zWkvY4OeGoKmm5WbfW+mz9X+HmeLy4fL8sp150lOVTe/b
        XbtpY/SH/gpF/wAm2T/9hW1/m1eefss/sl/Cj4j/ALOOg+KfEXhX+0dduortprv+0buLcUnlVfkSVVGF
        VRwO1eh/8FIv+TbJ/wDsK2v82rb/AGIf+TQfC/8A1xvv/SmarjSp1K+Nc4ptctrrb3T6WtSp1s5pQqxU
        l7PZq6+Nn5o/s+/A3V/2gviJbeGdLlWzhCG4vb90LLbQKQC2O5JIAGRkkdBk19+Xn7Iv7MXwpt9P0nxl
        c2f9qXC5juNe8QSWs8/OCwSOWNQM9wuPeuD/AOCVOm239n/EK/wDeebZwbschMSt+p/lXbfHz4B/AT4i
        /FLV9Y8c/FmXRvEbCOKbTT4gsLcWqrGoVBHJEWUEfNgnqxPepo4aFDDU5RhGUpavm7eV/l+J89lWEp/U
        Xi+SM5ybS5tlZtdfR+ex4p+2H+w3pfwv8KyeOvh/NcSaDCVN9pk8vnfZ42ICyxP1ZMkZDEkZznHSr+xn
        +xPpPxi8Mnxx43ubhPDxmeKz061k8o3Ow4d5JOqoCCMLgkgnIHX6i8cfET4R6X+zZr3gfTfiV4f1iK28
        Nz6darca3bTXM+2BljB2MNzkgfdA5xgV4N+w7+2D4P8ABPgGP4d+ObhdHigmkNlqMkZa3kjlYs0cpAOw
        hmb5j8uDyRjnOOHwdLHTjdNON4p7Xva34Xt5+h0V8LgIYuhUq2jGSd0nopK33LXyTt6nfeFf2f8A9kn4
        wapqfhnweY5dctUbe1jql8JVA4LxGZjHIASOVDDmvi39qD9nm8/Zz+In9hvdtqWk3kP2rTr5l2tJHkgq
        4HG9SMHHByDxnA+5rf8AYs+FXjC6n8TfCTx5qXhbUNrLFe+FdYW4t4i3UfKd4HUbRIoxxXw7+1J8P/iF
        8M/iBHofj7xHf+KXSHzdN1O8vJbhZYGY8p5jEocj5l7Edxgnz8xpuEKbnSUZd4/C99l9z18zHMqHLhZT
        lQirPSULWtpv17rtex43RRRXiHxYUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAV+w/
        7HP/ACaT4Q/68Lj/ANGy1+PFFelhMZ9VhUhy35lbfbf/ADPTyzHf2dilieXmsmrXtu097PsfVv8AwTj+
        Jv8Awhfxzbw/cTeXYeJrY2u09PtEeXiP5eYv/AxXun/BUD4nf2X4N8O+BbWXE2qznULxVPPkxcICPQuc
        /wDbOvzeopzx054NYRrZ7+V72+/r20N8Nmk8Ng6mESvzdb7X0enmvzP2M/Yw/wCTUvBX/XlP/wCjpK+S
        f+Cefxs8NfDrx14u8NeI72DSf7dljezvrlgkRljaQGJnPC7g4254yCOpFfFNFdk82k8THERhayaavun8
        tDT+1pRo4alCFnRtrffS23S68z9VvjV+xj8M/GHxA1H4n+LfFl9pWmzmO5voWuoorZgiKvEjDKqQo4Bz
        1wRkY679saFPEn7JHiybRv8AS7RrC3vIWjyQ0CyxybxnsEGfoK/HuisqmYQlQqYenS5VLz699temmnXv
        p3xz2nCc5ww6TmnfXVv7vU/VH/gmf/ybvc/9hu5/9Airwv8AZR+NPhz4U/tTfFDT/E13Dpdnr+p3UMOo
        XDBYopY7qUqrseFVgx+Y8AgZ618RUVUs0l7WhVjD+HHl33vFRfpt57nmRzOVPD0aMI605Xv31btb59z9
        Y/jx+xv8Pfi941k+IviPxZfaTZNbxfa/KuYVtmjjXAYSODsBUDPbvxmu0+OVrYeIv2R/FEfhQi+0mTw2
        W08wlmElusYKbc8n5F781+NFFTUzCnKhWoQpcqqJ316u93trvptbXuepHPqUasqyw65pKzfNr+Wn/DH3
        z/wTl/aO0Pw7pF78N/Euow6Y8l013pNzdSBIpC4AeDceA24blHfcw64z634q/Y1+DHgnx9J8UNd1u60a
        wivRqRsbi9ijsfP3bwF+TeQX5CBuTwOOK/Kuirhma5aftKSlKGz+7/Jfcjz8PmkaeGWFr0lUindX6f57
        n6uf8FIGD/s1TMDkHVLQj82rc/Yh/wCTQfC//XG+/wDSmavyHoqY5lyzrz5P4luu1lbtr+B3f29/tsMZ
        7L4Y8tr+d73sfRH7FP7Rtp+z/wDEa6OuGQeGNaiS3vpIlLNAykmObaOSF3MCBzhiQCQBX3L8Uv2V/hT+
        1hfWvjS01yUXUsSxvqXh66idLlQML5gKsNyjjPB7HoMfklRWdPMF7GNCvTU1Hbpb+v8AgHm4LMnhqUsP
        Vgp03rZ9H5H3T+1R8GfgH8Efgw/hzTL5p/Hsc6z2kqTpcX8rnAYXG3CpDtzxheRlQTnPUfseeOPg/wDF
        T4RQ/D/xXpnh/TfFkNvJp5kuraCKe9ibcFkhmZcmQA4xndlc9K/O6iop45Rqzm6acZKzj6aff/Vi/wC1
        FTxMa9GlGKirW7rfXz8z9Uvgj+xT4f8A2afH0/jyf4gXE2n20EqRQ3UaWkSRsuCZ5d5EgA56KMgHtXyd
        +378dPD/AMZviZpdt4YuE1DStBtXt/7RjHyXErsGfYe6DaoB6E5xxyfl6ioxOM9vShQpx5YR1te/fr8x
        1szpvDTwuGpKEZu71b7fdsgooorzjwQooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAo
        oooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAo
        oooA/9k=
</value>
  </data>
</root>